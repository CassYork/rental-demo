version: "3.8"

services:
  # Database service configuration
  db:
    image: postgres:15
    container_name: postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: medusa_user
      POSTGRES_PASSWORD: supersecret
      POSTGRES_DB: medusa_db
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medusa_user -d medusa_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis service configuration
  redis:
    image: redis:7-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend service (Medusa API + Admin)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: medusa_backend
    ports:
      - "9000:9000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://medusa_user:supersecret@db:5432/medusa_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=supersecret
      - COOKIE_SECRET=supersecret
      - STORE_CORS=http://localhost:8000,http://localhost:3000
      - ADMIN_CORS=http://localhost:9000
      - AUTH_CORS=http://localhost:9000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped

  # Storefront service (Next.js frontend)
  storefront:
    build:
      context: ./storefront
      dockerfile: Dockerfile
    container_name: medusa_storefront
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_MEDUSA_BACKEND_URL=http://backend:9000
      - NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY=your_publishable_key_here
    depends_on:
      - backend
    volumes:
      - ./storefront:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped

# Volume configuration for persistent storage
volumes:
  db_data:
  redis_data:
